---
id: ENGAGE
name: Engage Navigator
version: 1.0.0
tactics:
- id: SAP0001
  name: Plan
  object-type: tactic
  description: 'Identify and align an operation with a desired end-state.


    Planning is used to identify and align an operation within the context of strategic
    goals. By helping the defender to first identify their goals, Planning ensures
    that all engagement activities are focused and driving forward progress. Additionally,
    planning ensures that the defender can integrate the inputs of the various stakeholders
    at the beginning of an operation to ensure that the operation is efficient, effective,
    and safe. Finally, Planning activities ensure that each operation is informed
    by the successes and learns from the failures of past operations.

    '
- id: EAP0001
  name: Collect
  object-type: tactic
  description: 'Gather adversary tools, observe tactics, and collect other raw intelligence
    about the adversary''s activity.


    Collection is used to gather information about an adversary or their activities.
    This collection can include gathering system logs, network traffic, adversary
    artifacts, or other data that can be used to expose adversary activity. In many
    cases, Collection activities are also good cybersecurity practices. However, in
    Engage, these activities will focus exclusively on the intersection of denial,
    deception, and adversary engagement technologies and the defender\u2019s ability
    to Expose the adversary.

    '
- id: EAP0002
  name: Detect
  object-type: tactic
  description: 'Establish or maintain awareness in regard to adversary activity.


    Detection focuses on the defender''s ability to monitor adversary activity throughout
    an environment, often by creating high-fidelity detections. These detections can
    be produced in several ways. For example, a defender can deploy decoy artifacts
    as tripwires in the environment. The defender may create custom alerts based on
    TTPs or IOCs observed during a malware detonation operation. Finally, the defender
    may write customer decoders to analyze and alert on malicious traffic.

    In all these cases, detection activities allow the defender to produce a high-fidelity
    alert to monitor adversary activities. Often Detection activities are also good
    cybersecurity practices. However, in Engage, these activities will focus exclusively
    on the intersection of denial, deception, and adversary engagement technologies
    and the defender''s ability to Expose the adversary.

    '
- id: EAP0003
  name: Prevent
  object-type: tactic
  description: 'Stop all or part of the adversary''s ability to conduct their operation
    as intended.


    Prevention focuses on stopping the adversary''s ability to conduct their operations
    as intended. The defender can physically or virtually remove or disable resources,
    tighten security controls, or otherwise impair the adversary''s ability to operate.
    A defender might prevent an adversary from operating to force them to reveal different,
    possibly more advanced, capabilities. Additionally, a defender can use Prevention
    to discourage the adversary from operating against a specific target. In this
    case, the defender may be attempting to encourage the adversary to focus elsewhere
    in the engagement environment.

    There are many more Prevention activities that are also good cybersecurity practices.
    However, in Engage, we are focused on a subset of activities. Those are focused
    exclusively on the intersection of denial, deception, and adversary engagement
    technologies and the defender\u2019s ability to Affect the adversary.

    '
- id: EAP0004
  name: Direct
  object-type: tactic
  description: 'Encourage or discourage the adversary from conducting their operation
    as intended.


    Direction focuses on moving the adversary towards or away from an intended path.
    This forced direction can be accomplished by removing or disabling some resources,
    while adding or enabling others. The defender can add decoy articles or otherwise
    manipulate the environment to attempt to elicit specific responses from the adversary.
    Additionally, the defender can tighten some security controls while leaving others
    overly permissive or weakened. Finally, the defender can physically move the adversary
    by moving threats from their intended environment and into a safe engagement environment.

    For example, a suspicious email attachment can be moved from the intended target
    to an engagement environment for analysis. No matter how the Direction is achieved,
    the defender hopes to force the adversary to take unintended actions, or stop
    intended actions.

    '
- id: EAP0005
  name: Disrupt
  object-type: tactic
  description: 'Impair an adversary''s ability to conduct their operation as intended.


    Disruption is used to stop or discourage an adversary from conducting part or
    all of their mission. This disruption may increase the time, skills, or resources
    needed for the adversary to accomplish a specific task. For example, a defender
    may degrade network speeds as the adversary attempts to exfiltrate large blocks
    of data. As a second example, the defender may manipulate the output of commonly
    used discovery commands to show targets that do not exist or to hide real targets.
    In either case, the adversary may waste resources acting on partial or falsified
    data.

    Disruptions may also include planting misinformation designed to influence the
    adversary''s decision-makers to make the wrong decisions or to waste resources.

    '
- id: EAP0006
  name: Reassure
  object-type: tactic
  description: 'Add authenticity to deceptive components to convince an adversary
    that an environment is real.


    Reassurance is used to add authenticity to deceptive components to reduce adversary
    suspicion about the legitimacy of the environment. Activities include adding realistic
    user accounts, files, system activity, and any other content that an adversary
    might expect to find on the system. Reassurance may add new artifacts, such as
    peripherals and pocket litter, while concealing others, such as how recently an
    environment was stood up. If done correctly, Reassurance may help to make an adversary
    feel more comfortable upon landing in a new environment. This initial level of
    comfort can help anchor the adversary in the environment, increasing their tolerance
    to faults or weaknesses discovered later.

    '
- id: EAP0007
  name: Motivate
  object-type: tactic
  description: 'Encourage an adversary to conduct part or all of their mission.


    Motivation is used to encourage an adversary to conduct part or all of their mission
    by providing a target-rich environment. To do this, the defender can use unpatched
    versions of operating systems and software, remove end-point detection software,
    and use weak passwords. Additionally, the defender can open firewall ports, add
    proxy capabilities, or introduce elements that an adversary can easily leverage
    to bypass an obstacle in their operations. Finally, the defender can include enticing
    data to the environment to encourage the adversary to steal the data.

    '
- id: SAP0002
  name: Analyze
  object-type: tactic
  description: 'Retrospective review of information gained from an operation.


    Analysis is used to aggregate, examine, and evaluate the results of an operation.
    Analysis is useful for improving the defender''s security posture through the
    synthesis of operational data. Additionally, analysis can be used to turn data
    into actionable intelligence about an adversary''s motivators, behaviors, tactics,
    and techniques.

    Defenders can use analysis to gain insight into adversary activity and thus inform
    detection and analytics refinements. Reviewing the execution of an operation also
    provides feedback for the team to improve the quality of future operations. Finally,
    Analysis activities ensure that each operation is informed by the successes and
    learns from the failures of past operations.

    '
techniques:
- id: SAC0004
  name: Cyber Threat Intelligence
  object-type: technique
  description: 'Identify, understand, and prioritize potential engagement targets.

    '
  tactics:
  - SAP0001
  - SAP0002
- id: SAC0012
  name: Engagement Environment
  object-type: technique
  description: 'Design the systems and network for the operation.


    The Engagement Environment is the set of carefully tailored, highly instrumented
    systems designed on an engagement-by-engagement basis as the backdrop to the engagement
    narrative. It is the actual environment that the adversary will operate in. It
    is important to ensure that the Engagement Environment complements, rather than
    competes with, the engagement narrative. Additionally, these systems should provide
    conduits to allow the target adversary necessary movement throughout the environment,
    as needed to meet operational outcomes.

    While not strictly part of the Engagement Environment, the collection system is
    the set of systems used to gather artifacts and other data from an operation to
    monitor the engagement to ensure operational safety. It is important to consider
    the collection system while designing the engagement environment. By designing
    these environments in lockstep, the defender guarantees that all aspects oft he
    engagement environment can be monitored. This is essential to ensure operations
    remain within the guardrails set by the Rules of Engagement. For Example, available
    resources, capabilities, or skills may limit the type of assets in, or size of,
    the Engagement Environment.

    '
  tactics:
  - SAP0001
- id: SAC0005
  name: API Monitoring
  object-type: technique
  description: 'Define the set of events that would lead to the unnegotiable conclusion
    to the operation.


    Gaiting Criteria are the event or sequence of events that are agreed to be the
    unnegotiable immediate pause or end to the operation. Sometimes, these events
    include the successful completion of the agreed upon strategic goals. Other times,
    these events may signify the operation has reached a hard stop. This is often
    because future operational safety cannot be guaranteed. Or events have occurred
    that outweigh the agreed upon acceptable risk. Finally, it may just be that if
    the adversary operates any longer, they may learn something the defender doesn''t
    want them to know.

    Multiple parties from the technical operations, threat intel, legal, and management
    perspectives should be included when Defining Gaiting Criteria. For example, if
    an adversary begins to use the engagement environment as a platform to operate
    against other targets, stakeholders may decide that the operation must be suspended
    until the unacceptable traffic can be blocked. Defining Exit Criteria is an essential
    step to ensure operational safety

    '
  tactics:
  - SAP0001
- id: SAC0001
  name: Operational Objective
  object-type: technique
  description: 'Define the objective of the desired end-state of your adversary engagement
    operations.

    '
  tactics:
  - SAP0001
- id: SAC0002
  name: Persona Creation
  object-type: technique
  description: 'Plan and create a fictitious human user through a combination of planted
    data and revealed behavior patterns in support of your strategic objectives.

    '
  tactics:
  - SAP0001
- id: SAC0003
  name: Storyboarding
  object-type: technique
  description: 'Plan and create the deception story.


    Storyboarding is the process of creating the deception story through a sequence
    of events, interactions, the persona''s pattern of life, etc. A large part of
    Storyboarding is creating this pattern of life for the persona(s) using the system(s).
    The pattern of life can include behaviors such as using email or chat software,
    browsing the Internet, using system software, or physically moving the device
    (particularly important for mobile devices and laptops).

    The defender must determine how the Persona''s behavior and other events in the
    environment will be generated. Personas may be generated automatically with tooling,
    manually with human operators, or some combination of both. The availability of
    defender resources may greatly impact the frequency of manually executing behaviors.
    Not every action taken in the environment needs to be planned in advance. However,
    the defender should have a general idea of what actions will be taken. Setting
    up a storyboard early in the planning process will allow the operation to run
    smoothly, efficiently, and most importantly, consistently, regardless of operator,
    so as not to reveal the ruse.

    '
  tactics:
  - SAP0001
- id: SAC0009
  name: Threat Model
  object-type: technique
  description: 'Identify, understand, and prioritize potential engagement targets.

    '
  tactics:
  - SAP0001
  - SAP0002
- id: EAC0001
  name: API Monitoring
  object-type: technique
  description: 'Monitor local APIs that might be used by adversary tools and activity.


    API Monitoring involves capturing an internal OS function for its usage, accompanying
    arguments, and result. When a defender captures this information, the data gathered
    can be analyzed to gain insights into the activity of an adversary at a level
    deeper than normal system activity monitoring. This type of monitoring can also
    be used to produce high-fidelity detections.

    For example, the defender can trace activity through WinSock TCP API functions
    to view potentially malicious network events or trace usage of the Win32 DeleteFile()
    function to log all attempts at deleting a given file.

    '
  tactics:
  - EAP0001
- id: EAC0002
  name: Network Monitoring
  object-type: technique
  description: 'Monitor network traffic in order to detect adversary activity.


    Network Monitoring involves capturing network activity data, including capturing
    server, firewall, and other relevant logs. A defender can send this data to a
    centralized collection location for further analysis. This analysis can be automated
    or manual. In either case, a defender can use Network Monitoring to identify anomalous
    traffic patterns, large or unexpected data transfers, and other activity that
    may reveal the presence of an adversary. Monitoring is essential to maintain situational
    awareness of adversary activities to ensure operational safety and make progress
    towards the defender''s goals.

    Careful pre-operational planning should be done to properly instrument the engagement
    environment to ensure that all key network traffic is collected. Some use cases
    of network monitoring include detecting unexpected outbound traffic, systems establishing
    connections using encapsulated protocols, and known adversary C2 protocols.

    '
  tactics:
  - EAP0001
- id: EAC0003
  name: System Activity Monitoring
  object-type: technique
  description: 'Collect system activity logs that can reveal adversary activity.


    Capturing system logs can show logins, user and system events, etc. A defender
    can use such inherent system logging to study and collect first-hand observations
    about the adversary''s actions and tools. This data can be sent to a centralized
    collection location for further analysis. Careful planning should be used to guide
    which system logs are collected and at what level. If the logging level is set
    too high or too many system logs are collected, the defender may be blinded by
    the excess data.

    For example, understanding the adversary''s known TTPs will highlight resources
    the adversary is likely to touch and therefore which system logs are likely to
    capture adversary activity. Overall, System Activity Monitoring is essential to
    maintain situational awareness of adversarial activities in order to ensure operational
    safety and progress towards operational goals. Careful pre-operational planning
    should be done to properly instrument the engagement environment. This will ensure
    that all key network traffic is collected.

    '
  tactics:
  - EAP0001
- id: EAC0004
  name: Network Analysis
  object-type: technique
  description: 'Analyze network traffic to gain intelligence on communications between
    systems.


    Network analysis can be an automated or manual task to review communications between
    systems to expose adversary activity, such as C2 or data exfiltration traffic.
    This analysis is normally done by capturing and analyzing traffic on the wire
    or from previously collected packet capture. When custom protocols are in use,
    defender can leverage protocol decoder frameworks. These are customized code modules
    that can read network traffic and contextualize activity between the C2 operator
    and the implant.

    These frameworks are often required to process complex encryption ciphers and
    custom protocols into a human-readable format for an analyst to interpret. Decoder
    creation requires malware analysis of the implant to understand the design of
    the protocol. While a high level of technical maturity is required to create such
    a decoder, once created they are invaluable to a defender. For example, a defender
    can use a protocol decode to decrypt network capture data and expose an adversary''s
    C2 exfiltration activity.

    Not only does this data provide exquisate intelligence in regard to the adversary''s
    communications channels and targeting preferences, but it also provides future
    opportunities for data manipulation to further operational goals.

    '
  tactics:
  - EAP0002
- id: EAC0019
  name: Baseline
  object-type: technique
  description: 'Identify key system elements to establish a baseline and be prepared
    to reset a system to that baseline when necessary.


    To determine the system Baseline, the defender must identify software and configuration
    elements that are critical to a set of objectives. The defender must define the
    proper values and be prepared to reset a running system to its intended state.
    Reverting to a Baseline configuration can be essential when restoring an operational
    environment to a safe state or when looking to impose a cost on adversaries by
    preventing their technique.

    For example, the defender can watch for an adversary to make changes in the environment
    and then revert the environment with the goal of either forcing the adversary
    to target elsewhere in the network or to display a new, possibly more advanced
    TTP. The baseline values will also be crucial post-operation when analyzing changes
    to the environment over time.

    '
  tactics:
  - EAP0003
- id: EAC0017
  name: Hardware Manipulation
  object-type: technique
  description: 'Alter the hardware configuration of a system to limit what an adversary
    can do with the device.


    Hardware Manipulation can include physical or configuration changes to the hardware
    in the environment. This manipulation can include physically removing a system''s
    microphone, camera, on-board Wi-Fi adapter, etc. or using software controls to
    disable those devices. These types of manipulations can affect the adversary''s
    ability to achieve their operational objectives by incurring an increased resource
    cost, forcing them to change tactics, or stopping them altogether.

    Hardware Manipulation is often required to maintain operational safety. For example,
    if the operation includes Detonating Malware using a laptop physically located
    in a shared space, it is likely that the defender will not have the ability to
    hide the legitimate conversations and individuals present in the space. Unless
    the defender has the ability to control the background sounds and visuals, it
    is likely too risky to leave the camera and microphone connected to the machine.

    '
  tactics:
  - EAP0003
- id: EAC0020
  name: Isolation
  object-type: technique
  description: 'Using Isolation, a defender can limit the effectiveness and scope
    of malicious technique and/or lower exposure to unintended risks. When a system
    or resource is isolated, a defender can observe adversary behaviors or tools without
    allowing lateral movement. For example, a defender may detonate a piece of malware
    on an isolated system to perform dynamic analysis without risk to other network
    resources.

    Determining which systems should be isolated in an operation is a critical decision
    when calculating acceptable operational risk. However, if the adversary expects
    to find an entire corporate network but instead finds only an isolated system,
    they may not be interested in engaging with the target. Balancing acceptable risk,
    believability, and operational goals is essential when determining if or when
    a system should be isolated.

    '
  tactics:
  - EAP0003
  - EAP0005
- id: EAC0016
  name: Network Manipulation
  object-type: technique
  description: 'Make changes to network properties and functions to achieve a desired
    effect.


    Network Manipulation allows a defender to throttle network speeds, segment the
    network, maintain a unique IP addressing scheme, add a kill switch to cut off
    network access, etc. These types of manipulations can affect the adversary''s
    ability to achieve their operational objectives by incurring an increased resource
    cost, forcing them to change tactics, or stopping them altogether.

    For example, a defender can limit the allowed ports or network requests to force
    the adversary to alter their planned C2 or exfiltration channels. As another example,
    a defender could allow or deny outbound SMB requests from a network to affect
    the success of forced authentication. Additionally, the defender can degrade network
    speeds and reliability to impose a resource cost as adversaries exfiltrate large
    quantities of data. Finally, a defender can block primary C2 domains and IPs to
    determine if the adversary has additional infrastructure. While there are a range
    of network manipulation options, in all cases, the defender has an opportunity
    to learn about or influence the adversaries operating in the environment.

    '
  tactics:
  - EAP0003
  - EAP0004
  - EAP0005
- id: EAC0018
  name: Security Controls
  object-type: technique
  description: 'Alter security controls to make the system more or less vulnerable
    to attack.


    Manipulating Security Controls involves making configuration changes to a system''s
    security settings including modifying Group Policies, disabling/enabling autorun
    for removable media, tightening or relaxing system firewalls, etc. Such security
    controls can be tightened to dissuade or prevent adversary technique. Conversely,
    security controls can be weakened or left overly permissive to encourage or enable
    adversary technique.

    Tightening security controls can typically be done by implementing any of the
    mitigations described in MITRE ATT&CK. See https://attack.mitre.org/mitigations/enterprise/
    for a full list of mitigation strategies. While loosening security controls may
    seem obvious (i.e., simply don''t employ a given mitigation strategy), there is
    an additional level of nuance that must be considered. Some security controls
    are considered so routine that its absence may be suspicious.

    For example, completely turning off Windows Defender would likely raise the adversary''s
    suspicion. However, it is possible to turn off Windows Defender in certain shared
    drives to encourage adversary technique in predetermined locations. Therefore,
    it will likely be far less suspicious to turn off Windows Defender in a single
    directory or share. When assessing the likelihood that removing a given security
    control is overly suspicious, it is important to consider how prevalent that security
    control is, the target adversary''s sophistication, and the deception story.

    '
  tactics:
  - EAP0003
  - EAP0004
- id: EAC0021
  name: Attack Vector Migration
  object-type: technique
  description: 'Move a malicious link, file, or device from its intended location
    to a decoy system or network for execution/use.


    When a defender Migrates an Attack Vector, the defender intercepts a malicious
    element and moves it to a safe environment, such as a decoy system within a decoy
    network, for continued engagement or analysis. A defender may choose to migrate
    attack vectors, which may appear in the form of phishing emails, suspicious email
    attachments, or malicious USBs. For example, a defender might move a suspicious
    attachment from a corporate inbox to an inbox on a system that, while in the corporate
    IP space, is completely segmented from the enterprise network. This segregated
    environment will allow the adversary to move laterally throughout the environment
    without risk to enterprise resources.

    Determining when an engagement should be moved to an engagement environment is
    a critical decision when calculating acceptable operational risk. However, if
    the adversary sent a custom malware sample to a phishing victim, but ultimately
    find themselves on an unrelated victim, they may be suspicious. Balancing this
    acceptable risk, believability, and operational goals is essential when determining
    if or when to migrate an attack vector.

    '
  tactics:
  - EAP0004
- id: EAC0009
  name: Email Manipulation
  object-type: technique
  description: 'Modify the flow of email in the environment.


    Email Manipulation covers the various ways email flows in the environment can
    be affected. Email Manipulation can affect which mail appliances process mail
    flows, where mail is forwarded, or what mail is present in an inbox. A common
    use case for email manipulation is as a vector to introduce malware into the engagement
    environment.

    Suspicious emails may be removed from production mailbox and placed into an inbox
    in an engagement environment. Then, any suspicious attachments or links could
    be detonated from within the environment. As another example, emails collected
    over a long period of time from a legitimate inbox outside the environment may
    be moved into the environment to reassure the adversary of the environment''s
    legitimacy by creating a mailbox that more closely resembles a real, lived-in
    inbox.

    '
  tactics:
  - EAP0004
  - EAP0006
- id: EAC0023
  name: Introduced Vulnerabilities
  object-type: technique
  description: 'Intentionally introduce vulnerabilities into the environment for the
    adversary to exploit.


    By intentionally Introducing Vulnerabilities into the engagement environment,
    the defender can attempt to motivate the adversary to target specific resources.
    This targeting may serve to move the adversary towards a particular resource,
    or away from another resource. At other times, the defender may Introduce Vulnerabilities
    as amean of encouraging the adversary to reveal targeting preferences, available
    capabilities, or even to influence future targeting decisions. The operational
    objectives will drive how and why the defender Introduces Vulnerabilities in the
    engagement environment.

    '
  tactics:
  - EAP0002
  - EAP0004
  - EAP0007
- id: EAC0005
  name: Lures
  object-type: technique
  description: 'Deceptive systems and artifacts intended to serve as decoys, breadcrumbs,
    or bait to elicit a specific response from the adversary.


    Lures are intended to elicit a particular response from the adversary. For example,
    the defender may utilize Lures to enable or block adversary''s intended action
    or encourage or discourage a specific action or response. Lures can take a veriety
    of forms including credentials, accounts, files/directories, browser extensions/bookmarks,
    system processes, etc. Regardless of form, Lures provide opportunities to the
    defender to drive adversary behavior in ways that align with operational outcomes.

    '
  tactics:
  - EAP0002
  - EAP0004
  - EAP0005
- id: EAC0013
  name: Malware Detonation
  object-type: technique
  description: 'Execute malware under controlled conditions to analyze its functionality.


    Malware can be detonated in a controlled and safe environment. Clear goals and
    safety procedures should always be established before detonation to ensure that
    the operation is focused and safe. The malware can be detonated in an execution
    environment ranging from a somewhat sterile commercial malware execution appliance
    to a bespoke engagement environment crafted to support an extended engagement.

    Outcomes of a malware detonation operation can include new IOCs collected during
    dynamic analysis, additional TTPs elicited by detonating the malware in a target
    rich environment, and/or negative impacts to the adversary and their operation.
    These outcomes can be used to produce new analytics for high-fidelity analytics.

    '
  tactics:
  - EAP0002
  - EAP0004
  - EAP0007
- id: EAC0010
  name: Peripheral Management
  object-type: technique
  description: 'Manage peripheral devices used on systems within the network for engagement
    purposes.


    Peripheral Management is the administration of peripheral devices used on systems
    within the engagement environment. A defender can choose to allow or deny certain
    types of peripherals from being used on systems to either motivate or demotivate
    adversary technique or to direct the adversary towards specific targets. Defenders
    can also introduce peripherals to an adversary-controlled system to see how the
    adversary reacts. For example, the defender can introduce external Wi-Fi adapters,
    USB devices, etc. to determine if adversaries attempt to use them for exfiltration
    purposes.

    Additionally, peripherals provide an avenue for the defender to present new or
    additional information to the adversary. This information can be used to introduce
    an additional attack surface, motivate or demotivate adversary technique, or to
    further the deception story. For example, the defender may include data on a connected
    USB device or stage an important conversation near an externally connected camera
    or microphone. Depending on the contents of this data, the adversary may be encouraged
    to take a specific action and/or reassured about the legitimacy of the environment.

    '
  tactics:
  - EAP0004
  - EAP0006
- id: EAC0014
  name: Software Manipulation
  object-type: technique
  description: 'Make changes to a system''s software properties and functions to achieve
    a desired effect.


    Software Manipulation allows a defender to alter or replace elements of the OS,
    file system, or any other software installed and executed on a system. These alterations
    can affect outputs, degrade effectiveness, and/or prevent the software from functioning
    altogether. For example, the defender can manipulate software by changing the
    output of commonly used discovery commands to hide legitimate systems and artifacts
    and/or reveal decoy artifacts and systems.

    Alternatively, the defender can change the output of the password policy description
    for an adversary attempting to brute-force credentials. This manipulation may
    cause the adversary to waste resources brute-forcing passwords with inaccurate
    complexity requirements. If the defender wanted to degrade software effectiveness,
    they might weaken algorithms to expose data that is being archived, encoded, and/or
    encrypted.

    Finally, to prevent software from functioning altogether, the defender may cause
    software typically used to delete data or hide adversary artifacts to fail. For
    some Software Manipulation use cases, it may be possible to make changes in such
    a way that adversary actions and legitimate user actions are handled differently.
    For example, the defender could show all files when viewed in a graphical application
    but hide files or introduce decoy files when viewed via a terminal command. This
    would allow legitimate users full access to the file system while adversaries
    using a reverse shell to access the target would see the manipulated the files.

    '
  tactics:
  - EAP0001
  - EAP0004
  - EAP0005
- id: EAC0006
  name: Application Diversity
  object-type: technique
  description: 'Present the adversary with a veriety of installed applications and
    services.


    Application Diversity presents an array of software targets to the adversary.
    One a single target system, defenders can configure multiple services or software
    applications. This diversity may include not only a variety of diffrent types
    of applications, but also verious versions of the same application. Application
    Diversity can be used to encourage engagement by offering a broad attack surface.
    By monitoring adversary activity in a diverse environment, the defender can gain
    information on the adversary''s capabilities and targeting preferences.

    For example, a defender can install one or more applications with a veriety of
    patch levels to see how the adversary''s response differs across versions. Additionally,
    a diverse set of applications provides a veriety of avenues for the defender to
    present additional information throughout an operation. This information can be
    used to introduce additional attack surfaces, motivate or demotivate the adversary,
    or further the engagement narrative. For example, if the adversary is close to
    uncovering something that might raise suspicion around a target, the defender
    can add an event to a shared calendar application or a message in a notes application
    that the system will be offline for scheduled maintenance.

    Having a variety of applications on the system provides the defender with multiple
    engagement avenues to handle whatever events happen during the operation. Finally,
    diversity can increase the adversary''s overall comfort level by adding to the
    believability of the environment.

    '
  tactics:
  - EAP0006
  - EAP0007
- id: EAC0022
  name: Artifact Diversity
  object-type: technique
  description: 'Present the adversary with a variety of network and system artifacts.


    Artifact Diversity means presenting multiple network and system artifacts to the
    adversary including accounts, files/directories, credentials, logs, web browsing
    history, browser cookies, etc. These artifacts can be legitimate artifacts created
    as the result of natural usage over time or manually added to the environment
    by the defender. Artifact Diversity can be used to encourage the adversary to
    engage by offering a broad attack surface or can increase the adversary''s overall
    comfort level by adding to the believability of the environment.

    Additionally, these artifacts may be Lures intended to elicit a specific response
    from the adversary. In any case, by monitoring adversary activity in a diverse
    environment, the defender can gain information on the adversary''s capabilities
    and targeting preferences. For example, a defender can include a diverse set of
    accounts and credentials and then monitor to determine which accounts the adversary
    targets in the future.

    '
  tactics:
  - EAP0006
  - EAP0007
- id: EAC0008
  name: Burn-In
  object-type: technique
  description: 'Exercise a target system in a manner where it will generate desirable
    system artifacts.


    Burn-In involves exercising the system to create desirable system artifacts such
    as web browsing history, file system usage, or running of user applications. At
    times, Burn-In can be accomplished by simply letting a system or application run
    for an extended period of time. Other times, the defender engages with the environment
    to produce the Burn-In artifacts, such as when the defender logs into a decoy
    account or accesses a decoy website to generate session cookies and browser history.

    These tasks can be accomplished manually or via automated tooling. Burn-In should
    occur pre-operation and continue as appropriate during the operation. The artifacts
    generated during the Burn-In process can reassure the adversary of the environment''s
    legitimacy by creating an environment that more closely resembles a real, lived
    in, system or network.

    '
  tactics:
  - EAP0006
- id: EAC0015
  name: Information Manupulation
  object-type: technique
  description: "Conceal and reveal both facts and fictions to support a deception\
    \ story.\n\nInformation Manipulation is used to support the deception story. Revealed\
    \ facts and fictions can be used to adjust the adversary\\u2019s trust in the\
    \ environment. Concealed facts and fiction can be used to adjust the adversary\\\
    u2019s sense of uncertainty towards the environment. Revealed facts may include\
    \ OS type and version, geographic location, hardware type and version, accounts,\
    \ credentials, etc. Revealed fictions may include the content of decoy files,\
    \ emails, messages, etc. Revealed facts and fictions may or may not be believed\
    \ by the adversary.\nIf an adversary believes a revealed fact or fiction, it may\
    \ lend credibility to the environment or encourage a specific action. If an adversary\
    \ is suspicious or does not believe a revealed fact or fiction, it may erode adversary\
    \ trust in the environment. For example, if the adversary discovers that a collection\
    \ of legitimate passwords all contain the phrase \\\"honeytoken\\\" or \\\"canarytoken\\\
    \" they may lose trust in the legitimacy of the environment, even if the credentials\
    \ are real and valid in the enterprise network. Conversely, if the adversary checks\
    \ the timestamps on various files on the target and finds timestamps going back\
    \ multiple years, they may trust that the environment is legitimate even if, in\
    \ reality, the files are new and the timestamps were falsified. In this way, revealed\
    \ facts and fictions can be used to adjust the adversary's trust in the environment\
    \ in ways that support the defender's goals. \nConcealed facts may include virtualized\
    \ systems disguised as physical systems, monitoring software, or collection efforts.\
    \ Concealed fictions may include an encrypted, interestingly named, decoy file\
    \ or a partially deleted email thread referencing high value, but decoy, assets.\
    \ Concealed facts and fictions may or may not be discovered by the adversary.\
    \ If the adversary discovers a concealed fact or fiction, it may increase the\
    \ ambiguity of the environment and affect the adversary's sense of uncertainty.\
    \ For example, if an adversary discovers a hidden monitoring solution is deployed,\
    \ they may feel less comfortable engaging with that specific target. Conversely,\
    \ if the defender deploys a hidden monitoring solution with an intentional blind\
    \ spot that the adversary discovers, the adversary may feel a decrease in ambiguity\
    \ and take additional actions believing that they will be undetected. In this\
    \ way, concealed facts and fictions can be used to adjust the ambiguity and affect\
    \ the adversary's sense of uncertainty in ways that support the defender's goals.\n"
  tactics:
  - EAP0006
  - EAP0007
- id: EAC0007
  name: Network Diversity
  object-type: technique
  description: 'Use a diverse set of devices on the network to help establish the
    legitimacy of a decoy network.


    Network Diversity involves the use of an assorted collection of network resources
    such as networking devices, firewalls, printers, phones, etc. Network Diversity
    can be used to encourage adversaries to engage by offering a broad attack surface.
    Additionally, diversity can increase the adversary''s overall comfort level by
    adding to the believability of the environment.

    By monitoring adversary activity in a diverse environment, the defender can gain
    information on the adversary''s capabilities and targeting preferences. For example,
    a defender can deploy a variety of network resources to identify which devices
    are targeted by the adversary.

    '
  tactics:
  - EAP0006
  - EAP0007
- id: EAC0011
  name: Pocket Litter
  object-type: technique
  description: 'Place data on a system to reinforce the legitimacy of the system or
    user.


    Pocket Litter is data placed on a system to convince an adversary that the system
    and users are real. Pocket Litter can be used to establish a cognitive bias to
    raise the adversary''s tolerance to weaknesses in the environment. Unlike Decoy
    Artifacts, Pocket Litter does not necessarily aim to encourage the adversary to
    take a specific action, but rather it supports the overall deception story.

    Pocket Litter can include documents, pictures, registry entries, installed software,
    log history, browsing history, connection history, and other user data that an
    adversary would expect to exist on a user''s computer. For example, a defender
    might conduct a series of web searches to generate browser artifacts, or scatter
    a variety of photos and documents across the desktop to make the computer feel
    lived in.

    '
  tactics:
  - EAP0006
- id: EAC0012
  name: Personas
  object-type: technique
  description: 'Create fictitious human user(s) through a combination of planted data
    and revealed behavior patterns.


    A Persona is used to establish background information about a victim to increase
    the believability of the target. To create a persona, the defender must develop
    a backstory and seed the environment with varying data in support of this story.
    Depending on the need for realism, the constructed persona can be supported by
    evidence of hobbies, social and professional interactions, consumer transactions,
    employment, browsing habits, etc.

    In addition to lending legitimacy to the environment, personas can be used to
    engage directly with adversaries, such as during phishing email exchanges. Additionally,
    personas can make changes to the environment during the operation, such as adding
    or removing a USB device or introducing new decoy documents or credentials.

    '
  tactics:
  - EAP0007
- id: SAC0006
  name: After-Action Review
  object-type: technique
  description: 'Review of operational activities.


    The After-Action Review (AAR) is the opportunity for the team to review the events
    of the operation to ensure progress towards strategic outcomes. This retrospective
    can include a review of the entire operational process from planning, implementation,
    engagement activity, and impact. In additional to the operation itself, the Hotwash
    is an important time to assess the communication and teamwork of the operations
    team and all contributing stakeholders. While a Hotwash should always occur at
    the end of an operation, periodic hotwashes during long-running operations are
    vital to ensure alignment and progress towards the Strategic Goal.

    '
  tactics:
  - SAP0002
case-studies: []
