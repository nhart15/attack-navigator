---
id: ATLAS
name: Atlas thingy
version: 1.0.0
tactics:
- EAP0003
- id: EAP0004
  name: Direct
  object-type: tactic
  description: "Encourage or discourage the adversary from conducting their operation\
    \ as intended.\n\nDirection activities focus on moving the adversary towards or\
    \ away from an intended path. \nThis forced direction can be accomplished by removing\
    \ or disabling some resources, while adding or enabling others. \nThe defender\
    \ can add lures or otherwise manipulate the environment to attempt to elicit specific\
    \ responses from the adversary. \nAdditionally, the defender can tighten some\
    \ security controls while leaving others overly permissive or weakened. \nFinally,\
    \ the defender can physically move the adversary by moving threats from their\
    \ intended environment and into a safe engagement environment. \nFor example,\
    \ a suspicious email attachment can be moved from the intended target to an engagement\
    \ environment for analysis. \nNo matter how the direction is achieved, the defender\
    \ hopes to force the adversary to take unintended actions or stop intended actions.\n"
- id: EAP0005
  name: Disrupt
  object-type: tactic
  description: "Impair an adversary's ability to conduct their operation as intended.\n\
    \nDisruption activities are used to stop or discourage an adversary from conducting\
    \ part or all of their mission. \nThis disruption may increase the time, skills,\
    \ or resources needed for the adversary to accomplish a specific task. \nFor example,\
    \ a defender may degrade network speeds as the adversary attempts to exfiltrate\
    \ large blocks of data. \nAs a second example, the defender may manipulate the\
    \ output of commonly used discovery commands to show targets that do not exist\
    \ or to hide real targets. \nIn either case, the adversary may waste resources\
    \ acting on partial or falsified data. \nDisruptions may also include planting\
    \ misinformation designed to influence the adversary's decision-makers to make\
    \ the wrong decisions or to waste resources.\n"
techniques:
- id: EAC0019
  name: Baseline
  object-type: technique
  description: "Identify key system elements to establish a baseline and be prepared\
    \ to reset a system to that baseline when necessary.\n\nTo determine the system\
    \ Baseline, the defender must identify software and configuration elements that\
    \ are critical to a set of objectives. \nThe defender must define the proper values\
    \ and be prepared to reset a running system to its intended state. \nReverting\
    \ to a Baseline configuration can be essential when restoring an operational environment\
    \ to a safe state or when looking to impose a cost on adversaries by preventing\
    \ their technique. \nFor example, the defender can watch for an adversary to make\
    \ changes in the environment and then revert the environment with the goal of\
    \ either forcing the adversary to target elsewhere in the network or to display\
    \ a new, possibly more advanced, TTP. \nThe Baseline values will also be crucial\
    \ post-operation when analyzing changes to the environment over time.\n"
  tactics:
  - EAP0003
- id: EAC0017
  name: Hardware Manipulation
  object-type: technique
  description: "Alter the hardware configuration of a system to limit what an adversary\
    \ can do with the device.\n\nHardware Manipulation can include physical adjustments\
    \ or configuration changes to the hardware in the environment. \nThis manipulation\
    \ can include physically removing a system's microphone, camera, on-board Wi-Fi\
    \ adapter, etc. or using software controls to disable those devices. \nThese types\
    \ of manipulations can affect the adversary's ability to achieve their operational\
    \ objectives by incurring an increased resource cost, forcing them to change tactics,\
    \ or stopping them altogether. \nHardware Manipulation is often required to maintain\
    \ operational safety. \nFor example, if the operation includes Malware Detonation\
    \ using a laptop physically located in a shared space, it is likely that the defender\
    \ will not have the ability to hide the legitimate conversations and individuals\
    \ present in the space. \nUnless the defender can control the background sounds\
    \ and visuals, it is likely too risky to leave the camera and microphone connected\
    \ to the machine.\n"
  tactics:
  - EAP0003
- id: EAC0020
  name: Isolation
  object-type: technique
  description: "Configure devices, systems, networks, etc. to contain technique and\
    \ data, thus preventing the expansion of an engagement beyond desired limits.\n\
    \nUsing Isolation, a defender can limit the effectiveness and scope of malicious\
    \ technique and/or lower exposure to unintended risks. \nWhen a system or resource\
    \ is isolated, a defender can observe adversary behaviors or tools with limited,\
    \ or no, lateral movement allowed.\nFor example, a defender may detonate a piece\
    \ of malware on an isolated system to perform dynamic analysis without risk to\
    \ other network resources. \nDetermining which systems should be isolated in an\
    \ operation is a critical decision when calculating acceptable operational risk.\
    \ \nHowever, if the adversary expects to find an entire corporate network but\
    \ instead finds only an isolated system, they may not be interested in engaging\
    \ with the target. \nBalancing acceptable risk, believability, and operational\
    \ objectives is essential when determining if or when a system should be isolated.\n"
  tactics:
  - EAP0003
  - EAP0005
- id: EAC0016
  name: Netowrk Manipulation
  object-type: technique
  description: "Make changes to network properties and functions to achieve a desired\
    \ effect.\n\nNetwork Manipulation allows a defender to throttle network speeds,\
    \ segment the network, maintain a unique IP addressing scheme, add a kill switch\
    \ to cut off network access, etc.\nThese types of manipulations can affect the\
    \ adversary's ability to achieve their operational objectives by incurring an\
    \ increased resource cost, forcing them to change tactics, or stopping them altogether.\
    \ \nFor example, a defender can limit the allowed ports or network requests to\
    \ force the adversary to alter their planned C2 or exfiltration channels. \nAs\
    \ another example, a defender could allow or deny outbound SMB requests from a\
    \ network to affect the success of forced authentication.\nAdditionally, the defender\
    \ can degrade network speeds and reliability to impose a resource cost as adversaries\
    \ exfiltrate large quantities of data. \nFinally, a defender can block primary\
    \ C2 domains and IPs to determine if the adversary has additional infrastructure.\
    \ \nWhile there are a range of network manipulation options, in all cases, the\
    \ defender has an opportunity to learn about or influence the adversaries operating\
    \ in the environment.\n"
  tactics:
  - EAP0003
  - EAP0004
  - EAP0005
- id: EAC0018
  name: Security Controls
  object-type: technique
  description: "Alter security controls to make the system more or less vulnerable\
    \ to attack.\n\nManipulating Security Controls involves making configuration changes\
    \ to a system's security settings including modifying Group Policies, disabling/enabling\
    \ autorun for removable media, tightening or relaxing system firewalls, etc. \n\
    Such security controls can be tightened to dissuade or prevent adversary technique.\
    \ \nConversely, security controls can be weakened or left overly permissive to\
    \ encourage or enable adversary technique. \nTightening security controls can\
    \ typically be done by implementing any of the mitigations described in MITRE\
    \ ATT&CK. \nSee https://attack.mitre.org/mitigations/enterprise/ for a full list\
    \ of mitigation strategies. \nWhile loosening security controls may seem obvious\
    \ (i.e., simply don't employ a given mitigation strategy), there is an additional\
    \ level of nuance that must be considered. \nSome security controls are considered\
    \ so routine that its absence may be suspicious. \nFor example, completely turning\
    \ off Windows Defender would likely raise the adversary's suspicion. \nHowever,\
    \ it is possible to turn off Windows Defender in certain shared drives to encourage\
    \ adversary technique in predetermined locations. \nTherefore, it will likely\
    \ be far less suspicious to turn off Windows Defender in a single directory or\
    \ share. \nWhen assessing the likelihood that removing a given security control\
    \ is overly suspicious, it is important to consider how prevalent that security\
    \ control is, the target adversary's sophistication, and the engagement narrative.\n"
  tactics:
  - EAP0003
  - EAP0004
- id: EAC0021
  name: Attack Vector Migration
  object-type: technique
  description: "Move a malicious link, file, or device from its intended location\
    \ to an engagement system or network for execution/use.\n\nWhen a defender Migrates\
    \ an Attack Vector, the defender intercepts a malicious element and moves it to\
    \ a safe environment, such as a decoy system within a decoy network, for continued\
    \ engagement or analysis. \nA defender may choose to Attack Vector Migrations,\
    \ which may appear in the form of phishing emails, suspicious email attachments,\
    \ or malicious USBs. \nFor example, a defender might move a suspicious attachment\
    \ from a corporate inbox to an inbox on a system that, while in the corporate\
    \ IP space, is completely segmented from the enterprise network. \nThis segregated\
    \ environment will allow the adversary to move laterally throughout the environment\
    \ without risk to enterprise resources. \nDetermining when an engagement should\
    \ be moved to an engagement environment is a critical decision when calculating\
    \ acceptable operational risk. \nHowever, if the adversary sent a custom malware\
    \ sample to a phishing victim, but ultimately find themselves on an unrelated\
    \ victim, they may be suspicious. \nBalancing this acceptable risk, believability,\
    \ and operational goals is essential when determining if or when to migrate an\
    \ attack vector.\n"
  tactics:
  - EAP0004
- id: EAC0009
  name: Email Manipulation
  object-type: technique
  description: "Modify the flow of email in the environment.\n\nEmail Manipulation\
    \ covers the various ways email flows in the environment can be affected.\nEmail\
    \ Manipulation can affect which mail appliances process mail flows, where mail\
    \ is forwarded, or what mail is present in an inbox. \nA common use case for email\
    \ manipulation is as a vector to introduce malware into the engagement environment.\
    \ \nSuspicious emails may be removed from production mailbox and placed into an\
    \ inbox in an engagement environment. \nThen, any suspicious attachments or links\
    \ could be detonated from within the environment. \nAs another example, emails\
    \ collected over a long period of time from a legitimate inbox outside the environment\
    \ may be moved into the environment to reassure the adversary of the environment's\
    \ legitimacy by creating a mailbox that more closely resembles a real, lived-in\
    \ inbox.\n"
  tactics:
  - EAP0004
- id: EAC0023
  name: Introduced Vulnerabilities
  object-type: technique
  description: "Intentionally introduce vulnerabilities into the environment for the\
    \ adversary to exploit.\n\nBy intentionally Introducing Vulnerabilities into the\
    \ engagement environment, the defender can attempt to motivate the adversary to\
    \ target specific resources. \nThis targeting may serve to move the adversary\
    \ towards a particular resource, or away from another resource. \nAt other times,\
    \ the defender may Introduce Vulnerabilities as a mean of encouraging the adversary\
    \ to reveal targeting preferences, available capabilities, or even to influence\
    \ future targeting decisions. \nThe operational objectives will drive how and\
    \ why the defender Introduces Vulnerabilities in the engagement environment.\n"
  tactics:
  - EAP0004
- id: EAC0005
  name: Lures
  object-type: technique
  description: "Deceptive systems and artifacts intended to serve as decoys, breadcrumbs,\
    \ or bait to elicit a specific response from the adversary.\n\nLures are intended\
    \ to elicit a particular response from the adversary. \nFor example, the defender\
    \ may utilize Lures to enable or block the adversary's intended actions or encourage\
    \ or discourage a specific action or response. \nLures can take a variety of forms\
    \ including credentials, accounts, files/directories, browser extensions/bookmarks,\
    \ system processes, etc. \nRegardless of form, Lures provide opportunities to\
    \ the defender to drive adversary behavior in ways that align with operational\
    \ outcomes.\n"
  tactics:
  - EAP0004
  - EAP0005
- id: EAC0013
  name: Malware Detonation
  object-type: technique
  description: "Execute malware under controlled conditions to analyze its functionality.\n\
    \nMalware can be detonated in a controlled and safe environment. \nClear goals\
    \ and safety procedures should always be established before detonation to ensure\
    \ that the operation is focused and safe. \nThe malware can be detonated in an\
    \ execution environment ranging from a somewhat sterile commercial malware execution\
    \ appliance to a bespoke engagement environment crafted to support an extended\
    \ engagement.\nDepending on operational objectives, the outcome of a malware detonation\
    \ operation can include: collecting new IOCs during dynamic analysis, observing\
    \ additional TTPs by detonating the malware in a target rich environment, and/or\
    \ negatively impacting the adversary and their operation.\n"
  tactics:
  - EAP0004
- id: EAC0010
  name: Peripheral Management
  object-type: technique
  description: "Manage peripheral devices used on systems within the network for engagement\
    \ purposes.\n\nPeripheral Management is the administration of peripheral devices\
    \ used on systems within the engagement environment. \nA defender can choose to\
    \ allow or deny certain types of peripherals from being used on systems to either\
    \ motivate or demotivate adversary technique or to direct the adversary towards\
    \ specific targets. \nDefenders can also introduce peripherals to an adversary-controlled\
    \ system to see how the adversary reacts. \nFor example, the defender can introduce\
    \ external Wi-Fi adapters, USB devices, etc. to determine if adversaries attempt\
    \ to use them for exfiltration purposes.\nAdditionally, peripherals provide an\
    \ avenue for the defender to present new or additional information to the adversary.\
    \ \nThis information can be used to introduce an additional attack surface, motivate\
    \ or demotivate adversary technique, or to further the deception story. \nFor\
    \ example, the defender may include data on a connected USB device or stage an\
    \ important conversation near an externally connected camera or microphone. \n\
    Depending on the contents of this data, the adversary may be encouraged to take\
    \ a specific action and/or reassured about the legitimacy of the environment.\n"
  tactics:
  - EAP0004
- id: EAC0014
  name: Software Manipulation
  object-type: technique
  description: "Make changes to a system's software properties and functions to achieve\
    \ a desired effect.\n\nSoftware Manipulation allows a defender to alter or replace\
    \ elements of the OS, file system, or other software installed and executed on\
    \ a system. \nThese alterations can affect outputs, degrade effectiveness, and/or\
    \ prevent the software from functioning altogether. \nFor example, the defender\
    \ can manipulate software by changing the output of commonly used discovery commands\
    \ to hide legitimate systems and artifacts and/or reveal deceptive artifacts and\
    \ systems. \nAlternatively, the defender can change the output of the password\
    \ policy description for an adversary attempting to brute-force credentials. \n\
    This manipulation may cause the adversary to waste resources brute-forcing passwords\
    \ with inaccurate complexity requirements. \nIf the defender wanted to degrade\
    \ software effectiveness, they might weaken algorithms to expose data that is\
    \ being archived, encoded, and/or encrypted. \nFinally, to prevent software from\
    \ functioning altogether, the defender may cause failures in software typically\
    \ used to delete data or hide adversary artifacts. \nFor some Software Manipulation\
    \ use cases, it may be possible to make changes in such a way that adversary actions\
    \ and legitimate user actions are handled differently. \nFor example, the defender\
    \ could show all files when viewed in a graphical application but hide files or\
    \ introduce decoy files when viewed via a terminal command. \nThis setup would\
    \ allow legitimate users full access to the file system, while manipulating access\
    \ for adversaries using a reverse shell\n"
  tactics:
  - EAP0004
  - EAP0005
case-studies: []
